version: "3"

services:
  db:
    image: mongo:latest
    volumes:
      - database-storage:/run/db
    ports:
      - 27017:27017
    logging:
      driver: "none"

  learning_object_metadata_schema:
    image: learning_object_metadata_schema
    build: ./learning_object/metadata_schema
    command: gunicorn -b 0.0.0.0:80 app:api --reload
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/v1/learning-object-metadata-schema, */v1/learning-object-metadata-schema/*"
      VIRTUAL_HOST_WEIGHT: 10
    links:
      - db
    volumes:
      - ./learning_object/metadata_schema:/code
    depends_on:
      - db

  learning_object_default_files:
    image: learning_object_default_files
    build:
      context: ./learning_object/default_files
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - file-storage:/run/files
    logging:
      driver: "none"

  learning_object_collection:
    image: learning_object_collection
    build: ./learning_object/collection
    command: gunicorn -b 0.0.0.0:80 app:api --reload
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/v1/learning-object-collection, */v1/learning-object-collection/*"
      VIRTUAL_HOST_WEIGHT: 10
      FILE_STORAGE: /run/files
    links:
      - db
    volumes:
      - file-storage:/run/files
      - ./learning_object/collection:/code
    depends_on:
      - learning_object_metadata_schema

  learning_object_file_renderer:
    image: nginx
    volumes:
      - file-storage:/usr/share/nginx/html/learning-object-file-renderer:ro
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/learning-object-file-renderer/*"
      VIRTUAL_HOST_WEIGHT: 10
    logging:
      driver: "none"

  user_collection:
    image: user_collection
    build: ./user/collection
    command: gunicorn -b 0.0.0.0:80 app:api --reload
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/v1/user-collection, */v1/user-collection/*"
      VIRTUAL_HOST_WEIGHT: 10
      DB_HOST: db
    links:
      - db
    volumes:
      - ./user/collection:/code
    depends_on:
      - db

  user_login:
    image: user_login
    build: ./user/login
    command: gunicorn -b 0.0.0.0:80 app:api --reload
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/v1/user-login, */v1/user-login/*"
      VIRTUAL_HOST_WEIGHT: 10
      DB_HOST: db
    links:
      - db
    volumes:
      - ./user/login:/code
    depends_on:
      - db

  user_account_validation:
    image: user_account_validation
    build: ./user/account_validation
    command: gunicorn -b 0.0.0.0:80 app:api --reload
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/v1/user-account, */v1/user-account/*"
      VIRTUAL_HOST_WEIGHT: 10
      DB_HOST: db
    links:
      - db
    volumes:
      - ./user/account_validation:/code
    depends_on:
      - db
      - redis

  user_recover_password:
    image: user_recover_password
    build: ./user/recover_password
    command: gunicorn -b 0.0.0.0:80 app:api --reload
    ports:
      - 80
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "*/v1/recover-password, */v1/recover-password/*"
      VIRTUAL_HOST_WEIGHT: 10
      DB_HOST: db
    links:
      - db
    volumes:
    - ./user/recover_password:/code
    depends_on:
      - db
      - redis

  worker_account_validation:
    image: user_account_validation
    build: ./user/account_validation
    command: rq worker account_validation -u redis://redis
    environment:
      VIRTUAL_HOST: "*/v1/task-account-validation, */v1/task-account-validation/*"
    depends_on:
      - db
      - redis
  
  worker_recover_password:
    image: user_recover_password
    build: ./user/recover_password
    command: rq worker recover_password -u redis://redis
    environment:
      VIRTUAL_HOST: "*/v1/task-recover-password, */v1/task-recover-password/*"
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    volumes:
      - queue-storage:/data

  ui:
    image: ui
    build: ./ui
    ports:
      - 80
    environment:
      VIRTUAL_HOST: "*/*"
      VIRTUAL_HOST_WEIGHT: 0

  lb:
    image: dockercloud/haproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '8081:80'
      - '1936:1936'
    links:
      - db
      - learning_object_metadata_schema
      - learning_object_collection
      - learning_object_file_renderer
      - user_collection
      - user_login
      - user_account_validation
      - user_recover_password
      - ui
    logging:
      driver: "none"

volumes:
    file-storage:
    database-storage:
    queue-storage:
